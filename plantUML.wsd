@startuml Alphabot

enum Action {
    FORWARD,
    BACKWARD,
    LEFT,
    RIGHT,
    CLEAN
}

class EngineController {
    + moveForward(int time)
    + moveBackwards(int time)
    + moveLeft(int time)
    + moveRight(int time)
}

class Cleaner {
    + perform()
}

class Camera {
    - cap: VideoCapture
    - getImage(): tuple<Mat, Mat>
    + Camera()
    + ~Camera()
    + sendToServer(): tuple<Mat, Mat>
}

class Graffiti {
    - exist: bool
    - posX: int
    - posY: int
    + Graffiti()
    + Graffiti(int x, int y)
    + setState(int x, int y, bool exists)
    + getPosX(): int
    + getPosY(): int
    + isExist(): bool
}

class Alphabot {
    - engineStarted: bool
    - engineController: EngineController
    - cleaner: Cleaner
    - posX: int
    - posY: int
    - angle: float
    - target: Graffiti
    - chooseAction(Graffiti curTarget): Action
    - doAction(Action action, int time)
    + Alphabot()
    + recieveMessage(Graffiti graffiti, int x, int y, float agl)
    + SetPosition(int x, int y)
    + getPosX(): int
    + getPosY(): int
    + startEngine()
    + stopEngine()
}

class ThresholdGenerator {
    - mask: Mat
    - hsv: Mat
    - frame: Mat
    + ThresholdGenerator()
    + trackBar()
    + saveHSVtoFile(vector<Scalar> hsvValues)
    + getHSVfromFile(): tuple<Scalar, Scalar, Scalar, Scalar, Scalar, Scalar>
    + recieveImage(const Mat &hsv, const Mat &frame)
    + sendHSVtoServer(): tuple<Scalar, Scalar, Scalar, Scalar, Scalar, Scalar>
}

class Server {
- alphabot: Alphabot
- graffiti: Graffiti
- camera: Camera
- thresholdGenerator: ThresholdGenerator
- frame: Mat
- hsv: Mat
- robotRes: Mat
- graffitiRes: Mat
- debugMode: bool
- lower_purple: Scalar
- upper_purple: Scalar
- lower_blue: Scalar
- upper_blue: Scalar
- lower_green: Scalar
- upper_green: Scalar
- searchForGraffiti(): tuple<int, int>
- AlphabotAngleCalc(purple_X: int, purple_Y: int, blue_X: int, blue_Y: int, target_X: int, target_Y: int): double
- drawGraphics(purple_X: int, purple_Y: int, blue_X: int, blue_Y: int, angle: double, purpleContour: bool, blueContour: bool, graffiti: Graffiti)
- searchForRobot(graffiti: Graffiti): tuple<int, int, float>
- showResults()
+ Server()
+ Server(isDebug: bool)
+ receiveMessage()
+ sendMessage(graffiti: Graffiti, x: int, y: int, angle: float = 0)
+ sendImageToThresholdGenerator()
+ sendHSVToThresholdGenerator()
+ recieveHSVFromThresholdGenerator()
+ setDebugMode(isDebug: bool)
+ setHSV(color: string)

}

EngineController --* Alphabot
Cleaner --* Alphabot
Graffiti --* Alphabot
Action --> Alphabot
Graffiti --* Server
ThresholdGenerator --* Server
Camera -* Server
Server *- Alphabot
@enduml